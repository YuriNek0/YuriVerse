---
import { type CollectionEntry, getCollection, getEntry } from 'astro:content';
import { slug }from 'github-slugger';
import BlogPost from '../../../layouts/BlogPost.astro';
import { render } from 'astro:content';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	
	return await Promise.all(posts.filter(post => post.id.split('/').length == 3).map(async (post) => {
    const blog = slug(post.data.title);
		const splitted = post.id.split('/')
		const categoryId = splitted[0];
		const serieId = splitted[1];

		const category = await getEntry('category', categoryId);
		const serie = await getEntry('serie', categoryId+'/'+serieId);
		
    return {
      params: { category: slug(category.data.title), serie: slug(serie.data.title), blog },
      props: post
    }
  }))
}

type Props = CollectionEntry<'blog'>;
const post = Astro.props;

const { Content, remarkPluginFrontmatter } = await render(post);
---

<BlogPost {...post.data} postid={post.id} indexHeadings={remarkPluginFrontmatter.indexHeadings}>
	<Content />
</BlogPost>
